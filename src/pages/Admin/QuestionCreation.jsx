import React, { Component } from 'react'
import Navbar from '../../components/Admin/Navbar'
import { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBFormInline, MDBCard, MDBCardBody } from 'mdbreact';
import Cookies from 'js-cookie';
import CreateQues from '../../components/Admin/CreateQues';
import { updateQuestion, createQuestion } from '../../Redux/Actions/QuestionAction';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import '../../styling/admin_create.css';
import '../../styling/index.css';



class QuestionCreation extends Component {
    state = {
        difficultylevel: '',
        image1: '',
        image2: '',
        identical: ''
    }


    //questionid ?
    //This will be auto generated by the backend, if he complain.
    //Tell him, what so difficult to put AUTO INCREMENT?

    pictureload1 = (pic1) => {
        this.setState({ image1: pic1 });
    }

    pictureload2 = (pic2) => {
        this.setState({ image2: pic2 });
    }
    
    onSubmit = (difficultylevel, image1, image2, identical) => {
        
        let sessionID = Cookies.get('sessionid')
        let form = {
            sessionid: sessionID,
            qnimg1: image1,
            qnimg2: image2,
            answer: identical,
            difficulty: difficultylevel
        }
        this.props.createQuestion(form);
        this.props.updateQuestion(form);
    }

    componentDidUpdate(prevProps) {
        if (this.props.questionbank.status == "success")
            this.props.history.push('/admin')
    }
    render() {
        return (
            <MDBContainer className="content-qnc">
                <Navbar />
                    <MDBRow>
                        <MDBCol className="form-qn" md="7">
                            <MDBCard>
                                <MDBCardBody>
                                    <p className="h3 text-center py-4">Upload Question</p>
                                    <CreateQues onSubmit={this.onSubmit} pictureload1={this.pictureload1} pictureload2={this.pictureload2} />
                                </MDBCardBody>
                            </MDBCard>
                        </MDBCol>
                    </MDBRow>
            </MDBContainer>
        )
    }
}

QuestionCreation.propTypes = {
    createQuestion: PropTypes.func.isRequired,
    updateQuestion: PropTypes.func.isRequired,
}

const mapStateToProps = (state, ownProps) => ({
    questionbank: state.quest.question,

})

export default connect(mapStateToProps, { createQuestion, updateQuestion })(QuestionCreation)